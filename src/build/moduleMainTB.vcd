$date
	Sun Sep 01 10:20:59 2024
$end
$version
	Icarus Verilog
$end
$timescale
	1ps
$end
$scope module moduleMainTB $end
$var wire 7 ! seg7 [6:0] $end
$var wire 2 " disp [1:0] $end
$var wire 4 # bin [3:0] $end
$var reg 1 $ button $end
$var reg 4 % gray [3:0] $end
$scope module Top $end
$var wire 4 & codigo_gray_pi [3:0] $end
$var wire 1 $ rst_pi $end
$var wire 4 ' codigo_bin_led_po [3:0] $end
$var wire 7 ( catodo_po [6:0] $end
$var wire 2 ) anodo_po [1:0] $end
$scope module LEDs $end
$var wire 4 * codigo_gray_pi [3:0] $end
$var wire 4 + codigo_bin_led_po [3:0] $end
$var wire 4 , cod_bin [3:0] $end
$upscope $end
$scope module seg7 $end
$var wire 1 - b2 $end
$var wire 1 . b3 $end
$var wire 1 / b4 $end
$var wire 4 0 codigo_gray_pi [3:0] $end
$var wire 1 $ rst_pi $end
$var wire 1 1 sd_X $end
$var wire 1 2 sd_Y $end
$var wire 1 3 sd_Z $end
$var wire 1 4 seg_a $end
$var wire 1 5 seg_b $end
$var wire 1 6 seg_c $end
$var wire 1 7 seg_d $end
$var wire 1 8 seg_e $end
$var wire 1 9 seg_f $end
$var wire 1 : seg_g $end
$var wire 7 ; catodo_po [6:0] $end
$var wire 1 < b1 $end
$var wire 2 = anodo_po [1:0] $end
$upscope $end
$upscope $end
$upscope $end
$enddefinitions $end
$comment Show the parameter values. $end
$dumpall
$end
#0
$dumpvars
bx =
0<
bx0 ;
0:
19
18
17
16
15
14
03
12
11
b0 0
0/
0.
0-
b0 ,
b1111 +
b0 *
bx )
bx0 (
b1111 '
b0 &
b0 %
x$
b1111 #
bx "
bx0 !
$end
#1000
b1111110 !
b1111110 (
b1111110 ;
b1 "
b1 )
b1 =
0$
#2000
b10 "
b10 )
b10 =
1$
#4000
b1 "
b1 )
b1 =
0$
#6000
07
09
04
b110000 !
b110000 (
b110000 ;
b1110 #
b1110 '
b1110 +
08
b1 ,
1/
b1 %
b1 &
b1 *
b1 0
#8000
b1101101 !
b1101101 (
b1101101 ;
18
14
17
b1101 #
b1101 '
b1101 +
06
1:
0/
b10 ,
1.
b11 %
b11 &
b11 *
b11 0
#11000
b1111001 !
b1111001 (
b1111001 ;
08
b1100 #
b1100 '
b1100 +
16
b11 ,
1/
b10 %
b10 &
b10 *
b10 0
#15000
19
07
b110011 !
b110011 (
b110011 ;
04
15
1:
b1011 #
b1011 '
b1011 +
0/
0.
b100 ,
1-
b110 %
b110 &
b110 *
b110 0
#20000
05
b1011011 !
b1011011 (
b1011011 ;
17
b1010 #
b1010 '
b1010 +
14
b101 ,
1/
b111 %
b111 &
b111 *
b111 0
#26000
b1011111 !
b1011111 (
b1011111 ;
18
b1001 #
b1001 '
b1001 +
16
0/
b110 ,
1.
b101 %
b101 &
b101 *
b101 0
#33000
b1110000 !
b1110000 (
b1110000 ;
08
0:
b1000 #
b1000 '
b1000 +
15
07
09
b111 ,
1/
b100 %
b100 &
b100 *
b100 0
#41000
17
19
1:
18
b1111111 !
b1111111 (
b1111111 ;
0/
14
b111 #
b111 '
b111 +
11
0.
0-
b1000 ,
1<
b1100 %
b1100 &
b1100 *
b1100 0
#50000
b1111011 !
b1111011 (
b1111011 ;
08
b110 #
b110 '
b110 +
b1001 ,
1/
b1101 %
b1101 &
b1101 *
b1101 0
#60000
17
b1111110 !
b1111110 (
b1111110 ;
14
0:
18
01
b101 #
b101 '
b101 +
0/
b1010 ,
1.
b1111 %
b1111 &
b1111 *
b1111 0
#71000
07
04
b110000 !
b110000 (
b110000 ;
09
b100 #
b100 '
b100 +
08
b1011 ,
1/
b1110 %
b1110 &
b1110 *
b1110 0
#83000
17
06
18
1:
b1101101 !
b1101101 (
b1101101 ;
b11 #
b11 '
b11 +
0/
14
15
0.
b1100 ,
1-
b1010 %
b1010 &
b1010 *
b1010 0
#96000
b1111001 !
b1111001 (
b1111001 ;
08
b10 #
b10 '
b10 +
16
b1101 ,
1/
b1011 %
b1011 &
b1011 *
b1011 0
#110000
07
b110011 !
b110011 (
b110011 ;
04
19
b1 #
b1 '
b1 +
16
0/
b1110 ,
1.
b1001 %
b1001 &
b1001 *
b1001 0
#125000
17
b1011011 !
b1011011 (
b1011011 ;
05
b0 #
b0 '
b0 +
14
b1111 ,
1/
b1000 %
b1000 &
b1000 *
b1000 0
#141000
b110000 !
b110000 (
b110000 ;
b10 "
b10 )
b10 =
1$
#158000
b1111110 !
b1111110 (
b1111110 ;
11
b110 #
b110 '
b110 +
15
14
08
0.
b1001 ,
0-
1/
b1101 %
b1101 &
b1101 *
b1101 0
#176000
17
b110000 !
b110000 (
b110000 ;
14
0:
18
01
b101 #
b101 '
b101 +
0/
b1010 ,
1.
b1111 %
b1111 &
b1111 *
b1111 0
#195000
07
04
09
b100 #
b100 '
b100 +
08
b1011 ,
1/
b1110 %
b1110 &
b1110 *
b1110 0
#215000
17
06
18
1:
b11 #
b11 '
b11 +
0/
14
15
0.
b1100 ,
1-
b1010 %
b1010 &
b1010 *
b1010 0
#236000
08
b10 #
b10 '
b10 +
16
b1101 ,
1/
b1011 %
b1011 &
b1011 *
b1011 0
#258000
07
04
19
b1 #
b1 '
b1 +
16
0/
b1110 ,
1.
b1001 %
b1001 &
b1001 *
b1001 0
#281000
17
05
b0 #
b0 '
b0 +
14
b1111 ,
1/
b1000 %
b1000 &
b1000 *
b1000 0
#305000
