$date
	Mon Aug 26 09:45:11 2024
$end
$version
	Icarus Verilog
$end
$timescale
	1ps
$end
$scope module moduleMainTB $end
$var wire 7 ! seg7 [6:0] $end
$var wire 4 " led [3:0] $end
$var wire 2 # disp [1:0] $end
$var wire 4 $ bin [3:0] $end
$var reg 1 % button $end
$var reg 4 & gray [3:0] $end
$scope module Button $end
$var wire 1 % btn $end
$var wire 2 ' anodo_po [1:0] $end
$upscope $end
$scope module Conv $end
$var wire 4 ( codigo_gray_pi [3:0] $end
$var wire 4 ) cod_bin [3:0] $end
$upscope $end
$scope module Decod $end
$var wire 2 * anodo_po [1:0] $end
$var wire 1 + sd_X $end
$var wire 1 , sd_Y $end
$var wire 1 - sd_Z $end
$var wire 1 . seg_a $end
$var wire 1 / seg_b $end
$var wire 1 0 seg_c $end
$var wire 1 1 seg_d $end
$var wire 1 2 seg_e $end
$var wire 1 3 seg_f $end
$var wire 1 4 seg_g $end
$var wire 4 5 cod_bin [3:0] $end
$var wire 7 6 catodo_po [6:0] $end
$var wire 1 7 D $end
$var wire 1 8 C $end
$var wire 1 9 B $end
$var wire 1 : A $end
$upscope $end
$scope module Verif $end
$var wire 4 ; cod_bin [3:0] $end
$var wire 4 < codigo_bin_led_po [3:0] $end
$upscope $end
$upscope $end
$enddefinitions $end
$comment Show the parameter values. $end
$dumpall
$end
#0
$dumpvars
bx <
bx ;
x:
x9
x8
x7
bx 6
bx 5
x4
x3
x2
x1
x0
x/
x.
0-
1,
x+
b1 *
bx )
bx (
b1 '
bx &
1%
bx $
b1 #
bx "
bx !
$end
#10000
11
13
12
1.
04
b111111 !
b111111 6
10
07
1/
08
09
1+
0:
b0 "
b0 5
b0 <
b0 $
b0 )
b0 ;
b0 &
b0 (
#11000
01
03
b11000 !
b11000 6
0.
02
17
b1 "
b1 5
b1 <
b1 $
b1 )
b1 ;
b1 &
b1 (
#13000
12
b1001111 !
b1001111 6
11
1.
00
07
14
18
b10 "
b10 5
b10 <
b10 $
b10 )
b10 ;
b11 &
b11 (
#16000
02
b1011110 !
b1011110 6
10
17
b11 "
b11 5
b11 <
b11 $
b11 )
b11 ;
b10 &
b10 (
#20000
0.
13
01
b1111000 !
b1111000 6
1/
07
14
08
19
b100 "
b100 5
b100 <
b100 $
b100 )
b100 ;
b110 &
b110 (
#25000
0/
b1110110 !
b1110110 6
1.
11
17
b101 "
b101 5
b101 <
b101 $
b101 )
b101 ;
b111 &
b111 (
#31000
12
b1110111 !
b1110111 6
0/
07
18
b110 "
b110 5
b110 <
b110 $
b110 )
b110 ;
b101 &
b101 (
#38000
b11100 !
b11100 6
02
04
01
03
1/
17
b111 "
b111 5
b111 <
b111 $
b111 )
b111 ;
b100 &
b100 (
#46000
12
b1111111 !
b1111111 6
11
07
14
13
08
09
1+
1:
b1000 "
b1000 5
b1000 <
b1000 $
b1000 )
b1000 ;
b1100 &
b1100 (
#55000
b111111 !
b111111 6
b10 #
b10 '
b10 *
0%
#65000
02
17
b1001 "
b1001 5
b1001 <
b1001 $
b1001 )
b1001 ;
b1101 &
b1101 (
#75000
11
13
12
04
1.
b11000 !
b11000 6
07
0+
18
b1010 "
b1010 5
b1010 <
b1010 $
b1010 )
b1010 ;
b1111 &
b1111 (
#86000
01
03
0.
02
17
b1011 "
b1011 5
b1011 <
b1011 $
b1011 )
b1011 ;
b1110 &
b1110 (
#98000
12
11
14
00
1.
07
1/
08
19
b1100 "
b1100 5
b1100 <
b1100 $
b1100 )
b1100 ;
b1010 &
b1010 (
#111000
02
10
17
b1101 "
b1101 5
b1101 <
b1101 $
b1101 )
b1101 ;
b1011 &
b1011 (
#125000
01
0.
1/
13
07
18
b1110 "
b1110 5
b1110 <
b1110 $
b1110 )
b1110 ;
b1001 &
b1001 (
#140000
11
0/
1.
17
b1111 "
b1111 5
b1111 <
b1111 $
b1111 )
b1111 ;
b1000 &
b1000 (
#156000
12
1/
00
03
07
08
b1100 "
b1100 5
b1100 <
b1100 $
b1100 )
b1100 ;
b1010 &
b1010 (
#173000
b1001111 !
b1001111 6
b1 #
b1 '
b1 *
1%
#190000
b11000 !
b11000 6
b10 #
b10 '
b10 *
0%
#208000
