$date
	Thu Aug 29 20:49:24 2024
$end
$version
	Icarus Verilog
$end
$timescale
	1ps
$end
$scope module moduleMainTB $end
$var wire 7 ! seg7 [6:0] $end
$var wire 2 " disp [1:0] $end
$var wire 4 # bin [3:0] $end
$var reg 1 $ button $end
$var reg 4 % gray [3:0] $end
$var reg 4 & led [3:0] $end
$scope module Top $end
$var wire 4 ' codigo_gray_pi [3:0] $end
$var wire 1 $ rst_pi $end
$var wire 4 ( codigo_bin_led_po [3:0] $end
$var wire 4 ) cod_bin [3:0] $end
$var wire 7 * catodo_po [6:0] $end
$var wire 2 + anodo_po [1:0] $end
$scope module Gray $end
$var wire 4 , codigo_gray_pi [3:0] $end
$var wire 4 - cod_bin [3:0] $end
$upscope $end
$scope module LEDs $end
$var wire 4 . cod_bin [3:0] $end
$var wire 4 / codigo_bin_led_po [3:0] $end
$upscope $end
$scope module seg7 $end
$var wire 4 0 cod_bin [3:0] $end
$var wire 1 $ rst_pi $end
$var wire 1 1 sd_X $end
$var wire 1 2 sd_Y $end
$var wire 1 3 sd_Z $end
$var wire 1 4 seg_a $end
$var wire 1 5 seg_b $end
$var wire 1 6 seg_c $end
$var wire 1 7 seg_d $end
$var wire 1 8 seg_e $end
$var wire 1 9 seg_f $end
$var wire 1 : seg_g $end
$var wire 7 ; catodo_po [6:0] $end
$var wire 1 < b4 $end
$var wire 1 = b3 $end
$var wire 1 > b2 $end
$var wire 1 ? b1 $end
$var wire 2 @ anodo_po [1:0] $end
$upscope $end
$upscope $end
$upscope $end
$enddefinitions $end
$comment Show the parameter values. $end
$dumpall
$end
#0
$dumpvars
bx @
0?
0>
0=
0<
bx0 ;
0:
19
18
17
16
15
14
03
12
11
b0 0
b0 /
b0 .
b0 -
b0 ,
bx +
bx0 *
b0 )
b0 (
b0 '
bx &
b0 %
x$
b0 #
bx "
bx0 !
$end
#1000
b1111110 !
b1111110 *
b1111110 ;
b1 "
b1 +
b1 @
0$
#2000
b10 "
b10 +
b10 @
1$
#4000
b1 "
b1 +
b1 @
0$
#6000
07
09
04
b110000 !
b110000 *
b110000 ;
08
b1 #
b1 (
b1 /
1<
b1 )
b1 -
b1 .
b1 0
b1 %
b1 '
b1 ,
#8000
18
06
0<
b1101101 !
b1101101 *
b1101101 ;
17
14
1:
b10 #
b10 (
b10 /
1=
b10 )
b10 -
b10 .
b10 0
b11 %
b11 '
b11 ,
#11000
08
b1111001 !
b1111001 *
b1111001 ;
16
b11 #
b11 (
b11 /
1<
b11 )
b11 -
b11 .
b11 0
b10 %
b10 '
b10 ,
#15000
19
04
0<
15
07
b110011 !
b110011 *
b110011 ;
0=
1:
b100 #
b100 (
b100 /
1>
b100 )
b100 -
b100 .
b100 0
b110 %
b110 '
b110 ,
#20000
05
b1011011 !
b1011011 *
b1011011 ;
17
14
b101 #
b101 (
b101 /
1<
b101 )
b101 -
b101 .
b101 0
b111 %
b111 '
b111 ,
#26000
18
1:
b1011111 !
b1011111 *
b1011111 ;
0<
17
05
b110 #
b110 (
b110 /
1=
b110 )
b110 -
b110 .
b110 0
b101 %
b101 '
b101 ,
#33000
b1110000 !
b1110000 *
b1110000 ;
08
0:
07
09
15
b111 #
b111 (
b111 /
1<
b111 )
b111 -
b111 .
b111 0
b100 %
b100 '
b100 ,
#41000
18
0<
0=
17
14
b1111111 !
b1111111 *
b1111111 ;
1:
19
0>
15
11
b1000 #
b1000 (
b1000 /
1?
b1000 )
b1000 -
b1000 .
b1000 0
b1100 %
b1100 '
b1100 ,
#50000
b1111011 !
b1111011 *
b1111011 ;
08
b1001 #
b1001 (
b1001 /
1<
b1001 )
b1001 -
b1001 .
b1001 0
b1101 %
b1101 '
b1101 ,
#60000
18
17
b1111110 !
b1111110 *
b1111110 ;
19
0<
14
0:
01
b1010 #
b1010 (
b1010 /
1=
b1010 )
b1010 -
b1010 .
b1010 0
b1111 %
b1111 '
b1111 ,
#71000
07
04
b110000 !
b110000 *
b110000 ;
09
08
b1011 #
b1011 (
b1011 /
1<
b1011 )
b1011 -
b1011 .
b1011 0
b1110 %
b1110 '
b1110 ,
#83000
18
06
0<
17
1:
09
b1101101 !
b1101101 *
b1101101 ;
0=
15
14
b1100 #
b1100 (
b1100 /
1>
b1100 )
b1100 -
b1100 .
b1100 0
b1010 %
b1010 '
b1010 ,
#96000
08
b1111001 !
b1111001 *
b1111001 ;
16
b1101 #
b1101 (
b1101 /
1<
b1101 )
b1101 -
b1101 .
b1101 0
b1011 %
b1011 '
b1011 ,
#110000
07
04
15
b110011 !
b110011 *
b110011 ;
0<
19
b1110 #
b1110 (
b1110 /
1=
b1110 )
b1110 -
b1110 .
b1110 0
b1001 %
b1001 '
b1001 ,
#125000
17
05
b1011011 !
b1011011 *
b1011011 ;
14
b1111 #
b1111 (
b1111 /
1<
b1111 )
b1111 -
b1111 .
b1111 0
b1000 %
b1000 '
b1000 ,
#141000
b110000 !
b110000 *
b110000 ;
b10 "
b10 +
b10 @
1$
#158000
b1111110 !
b1111110 *
b1111110 ;
11
1:
17
0=
15
08
14
0>
b1001 #
b1001 (
b1001 /
1<
b1001 )
b1001 -
b1001 .
b1001 0
b1101 %
b1101 '
b1101 ,
#176000
18
17
19
0<
14
0:
b110000 !
b110000 *
b110000 ;
01
b1010 #
b1010 (
b1010 /
1=
b1010 )
b1010 -
b1010 .
b1010 0
b1111 %
b1111 '
b1111 ,
#195000
07
04
09
08
b1011 #
b1011 (
b1011 /
1<
b1011 )
b1011 -
b1011 .
b1011 0
b1110 %
b1110 '
b1110 ,
#215000
18
06
0<
17
1:
09
0=
15
14
b1100 #
b1100 (
b1100 /
1>
b1100 )
b1100 -
b1100 .
b1100 0
b1010 %
b1010 '
b1010 ,
#236000
08
16
b1101 #
b1101 (
b1101 /
1<
b1101 )
b1101 -
b1101 .
b1101 0
b1011 %
b1011 '
b1011 ,
#258000
07
04
15
0<
19
b1110 #
b1110 (
b1110 /
1=
b1110 )
b1110 -
b1110 .
b1110 0
b1001 %
b1001 '
b1001 ,
#281000
17
05
14
b1111 #
b1111 (
b1111 /
1<
b1111 )
b1111 -
b1111 .
b1111 0
b1000 %
b1000 '
b1000 ,
#305000
