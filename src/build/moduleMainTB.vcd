$date
	Thu Aug 29 22:35:02 2024
$end
$version
	Icarus Verilog
$end
$timescale
	1ps
$end
$scope module moduleMainTB $end
$var wire 7 ! seg7 [6:0] $end
$var wire 2 " disp [1:0] $end
$var wire 4 # bin [3:0] $end
$var reg 1 $ button $end
$var reg 4 % gray [3:0] $end
$scope module Top $end
$var wire 4 & codigo_gray_pi [3:0] $end
$var wire 1 $ rst_pi $end
$var wire 4 ' codigo_bin_led_po [3:0] $end
$var wire 7 ( catodo_po [6:0] $end
$var wire 2 ) anodo_po [1:0] $end
$scope module Gray $end
$var wire 4 * codigo_gray_pi [3:0] $end
$var wire 4 + cod_bin [3:0] $end
$upscope $end
$scope module LEDs $end
$var wire 4 , codigo_gray_pi [3:0] $end
$var wire 4 - codigo_bin_led_po [3:0] $end
$var wire 4 . cod_bin [3:0] $end
$upscope $end
$scope module seg7 $end
$var wire 1 / b2 $end
$var wire 1 0 b3 $end
$var wire 1 1 b4 $end
$var wire 4 2 codigo_gray_pi [3:0] $end
$var wire 1 $ rst_pi $end
$var wire 1 3 sd_X $end
$var wire 1 4 sd_Y $end
$var wire 1 5 sd_Z $end
$var wire 1 6 seg_a $end
$var wire 1 7 seg_b $end
$var wire 1 8 seg_c $end
$var wire 1 9 seg_d $end
$var wire 1 : seg_e $end
$var wire 1 ; seg_f $end
$var wire 1 < seg_g $end
$var wire 7 = catodo_po [6:0] $end
$var wire 1 > b1 $end
$var wire 2 ? anodo_po [1:0] $end
$upscope $end
$upscope $end
$upscope $end
$enddefinitions $end
$comment Show the parameter values. $end
$dumpall
$end
#0
$dumpvars
bx ?
0>
bx0 =
0<
1;
1:
19
18
17
16
05
14
13
b0 2
01
00
0/
b0 .
b1111 -
b0 ,
b0 +
b0 *
bx )
bx0 (
b1111 '
b0 &
b0 %
x$
b1111 #
bx "
bx0 !
$end
#1000
b1111110 !
b1111110 (
b1111110 =
b10 "
b10 )
b10 ?
0$
#2000
b1 "
b1 )
b1 ?
1$
#4000
b10 "
b10 )
b10 ?
0$
#6000
09
0;
06
b1110 #
b1110 '
b1110 -
0:
b1 +
b1 .
11
b1 %
b1 &
b1 *
b1 ,
b1 2
#8000
1:
16
19
b1101 #
b1101 '
b1101 -
08
1<
b10 +
01
b10 .
10
b11 %
b11 &
b11 *
b11 ,
b11 2
#11000
0:
b11 +
b1100 #
b1100 '
b1100 -
18
b11 .
11
b10 %
b10 &
b10 *
b10 ,
b10 2
#15000
1;
09
06
17
1<
b1011 #
b1011 '
b1011 -
01
b100 +
00
b100 .
1/
b110 %
b110 &
b110 *
b110 ,
b110 2
#20000
07
19
b1010 #
b1010 '
b1010 -
16
b101 +
b101 .
11
b111 %
b111 &
b111 *
b111 ,
b111 2
#26000
1:
b110 +
b1001 #
b1001 '
b1001 -
18
01
b110 .
10
b101 %
b101 &
b101 *
b101 ,
b101 2
#33000
0:
0<
b111 +
b1000 #
b1000 '
b1000 -
17
09
0;
b111 .
11
b100 %
b100 &
b100 *
b100 ,
b100 2
#41000
19
1;
1<
1:
b1111110 !
b1111110 (
b1111110 =
01
16
b111 #
b111 '
b111 -
13
00
0/
b1000 +
b1000 .
1>
b1100 %
b1100 &
b1100 *
b1100 ,
b1100 2
#50000
0:
b110 #
b110 '
b110 -
b1001 +
b1001 .
11
b1101 %
b1101 &
b1101 *
b1101 ,
b1101 2
#60000
19
b110000 !
b110000 (
b110000 =
16
0<
1:
03
b101 #
b101 '
b101 -
b1010 +
01
b1010 .
10
b1111 %
b1111 &
b1111 *
b1111 ,
b1111 2
#71000
09
06
0;
b1011 +
b100 #
b100 '
b100 -
0:
b1011 .
11
b1110 %
b1110 &
b1110 *
b1110 ,
b1110 2
#83000
19
08
1:
1<
b1100 +
b11 #
b11 '
b11 -
01
16
17
00
b1100 .
1/
b1010 %
b1010 &
b1010 *
b1010 ,
b1010 2
#96000
0:
b10 #
b10 '
b10 -
b1101 +
18
b1101 .
11
b1011 %
b1011 &
b1011 *
b1011 ,
b1011 2
#110000
09
06
1;
b1110 +
b1 #
b1 '
b1 -
18
01
b1110 .
10
b1001 %
b1001 &
b1001 *
b1001 ,
b1001 2
#125000
19
07
b1111 +
b0 #
b0 '
b0 -
16
b1111 .
11
b1000 %
b1000 &
b1000 *
b1000 ,
b1000 2
#141000
b1011011 !
b1011011 (
b1011011 =
b1 "
b1 )
b1 ?
1$
#158000
13
b1111011 !
b1111011 (
b1111011 =
b1001 +
b110 #
b110 '
b110 -
17
16
0:
00
b1001 .
0/
11
b1101 %
b1101 &
b1101 *
b1101 ,
b1101 2
#176000
19
b1111110 !
b1111110 (
b1111110 =
16
0<
1:
03
b101 #
b101 '
b101 -
b1010 +
01
b1010 .
10
b1111 %
b1111 &
b1111 *
b1111 ,
b1111 2
#195000
09
06
b110000 !
b110000 (
b110000 =
0;
b1011 +
b100 #
b100 '
b100 -
0:
b1011 .
11
b1110 %
b1110 &
b1110 *
b1110 ,
b1110 2
#215000
19
08
1:
1<
b1101101 !
b1101101 (
b1101101 =
b1100 +
b11 #
b11 '
b11 -
01
16
17
00
b1100 .
1/
b1010 %
b1010 &
b1010 *
b1010 ,
b1010 2
#236000
b1111001 !
b1111001 (
b1111001 =
0:
b10 #
b10 '
b10 -
b1101 +
18
b1101 .
11
b1011 %
b1011 &
b1011 *
b1011 ,
b1011 2
#258000
09
b110011 !
b110011 (
b110011 =
06
1;
b1110 +
b1 #
b1 '
b1 -
18
01
b1110 .
10
b1001 %
b1001 &
b1001 *
b1001 ,
b1001 2
#281000
19
b1011011 !
b1011011 (
b1011011 =
07
b1111 +
b0 #
b0 '
b0 -
16
b1111 .
11
b1000 %
b1000 &
b1000 *
b1000 ,
b1000 2
#305000
